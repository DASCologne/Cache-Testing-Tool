# Explicit Caching controlled by server>Validation of freshness>Stale response>For private caches>

## 1.4.1.3.1 Validating stale response: ETag, max-age=10 and must-revalidate
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;et:123' -p 5 -ep 'ch:false;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;et:123' -p 10 -ep 'ch:true;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;et:123' -ep 'cb:true;st:200' -es 'ch:false;st:200'

## 1.4.1.3.2 Validating stale response: ETag and must-revalidate but without freshness lifetime
GET /rsc -c 'ac:application/json' -s 'cc:private,must-revalidate;et:123' -p 5 -ep 'ch:false;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,must-revalidate;et:123' -ep 'cb:true;st:200' -es 'ch:false;st:200'

## 1.4.1.3.3 Validating stale response: ETag, expiration in 10 seconds and must-revalidate
GET /rsc -c 'ac:application/json' -s 'exp:10;cc:private,must-revalidate;et:123' -p 5 -ep 'ch:false;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'exp:10;cc:private,must-revalidate;et:123' -p 10 -ep 'ch:true;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'exp:10;cc:private,must-revalidate;et:123' -ep 'cb:true;st:200' -es 'ch:false;st:200'

## 1.4.1.3.4 Validating stale response: ETag, max-age=20, expiration in 10 seconds and must-revalidate
GET /rsc -c 'ac:application/json' -s 'exp:10;cc:private,max-age=20,must-revalidate;et:123' -p 5 -ep 'ch:false;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'exp:10;cc:private,max-age=20,must-revalidate;et:123' -p 10 -ep 'ch:true;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'exp:10;cc:private,max-age=20,must-revalidate;et:123' -ep 'ch:true;st:200' -es 'ch:false;st:200'

## 1.4.1.3.5 Validating stale response: Last-Modified 10 seconds before, max-age=10 and must-revalidate
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:-10' -p 5 -ep 'ch:false;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:-10' -p 10 -ep 'ch:true;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:-10' -ep 'cb:true;st:200' -es 'ch:false;st:200'

## 1.4.1.3.6 Validating stale response: Last-Modified 5 seconds before, ETag, max-age=10 and must-revalidate
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:-10;et:123' -p 5 -ep 'ch:false;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:-10;et:123' -p 10 -ep 'ch:true;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:-10;et:123' -ep 'cb:true;st:200' -es 'ch:false;st:200'

## 1.4.1.3.7 Validating stale response: Last-Modified 10 hour in the future, max-age=10 and must-revalidate
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:3600' -p 5 -ep 'ch:false;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:3600' -p 10 -ep 'ch:true;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate;lm:3600' -ep 'cb:true;st:200' -es 'ch:false;st:200'

## 1.4.1.3.8 Validating stale response: max-age=10 and must-revalidate but no validation tokens
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate' -p 5 -ep 'ch:false;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate' -p 10 -ep 'ch:true;st:200' -es 'ch:false;st:200'
GET /rsc -c 'ac:application/json' -s 'cc:private,max-age=10,must-revalidate' -ep 'cb:true;st:200' -es 'ch:false;st:200'

# Explicit Caching controlled by server>Validation of freshness>Stale response>For private caches>